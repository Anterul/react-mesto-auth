[{"/home/anteru/dev/react-mesto-auth/src/index.js":"1","/home/anteru/dev/react-mesto-auth/src/reportWebVitals.js":"2","/home/anteru/dev/react-mesto-auth/src/components/App.js":"3","/home/anteru/dev/react-mesto-auth/src/components/Header.js":"4","/home/anteru/dev/react-mesto-auth/src/components/Footer.js":"5","/home/anteru/dev/react-mesto-auth/src/components/EditAvatarPopup.js":"6","/home/anteru/dev/react-mesto-auth/src/components/ImagePopup.js":"7","/home/anteru/dev/react-mesto-auth/src/components/Main.js":"8","/home/anteru/dev/react-mesto-auth/src/components/EditProfilePopup.js":"9","/home/anteru/dev/react-mesto-auth/src/components/DeleteCardPopup.js":"10","/home/anteru/dev/react-mesto-auth/src/components/AddPlacePopup.js":"11","/home/anteru/dev/react-mesto-auth/src/components/Login.js":"12","/home/anteru/dev/react-mesto-auth/src/components/InfoTooltip.js":"13","/home/anteru/dev/react-mesto-auth/src/components/ProtectedRoute.js":"14","/home/anteru/dev/react-mesto-auth/src/components/Register.js":"15","/home/anteru/dev/react-mesto-auth/src/utils/Auth.js":"16","/home/anteru/dev/react-mesto-auth/src/utils/Api.js":"17","/home/anteru/dev/react-mesto-auth/src/contexts/AppContext.js":"18","/home/anteru/dev/react-mesto-auth/src/contexts/CurrentUserContext.js":"19","/home/anteru/dev/react-mesto-auth/src/components/PopupWithForm.js":"20","/home/anteru/dev/react-mesto-auth/src/components/Card.js":"21"},{"size":639,"mtime":1677956707340,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1676921323410,"results":"24","hashOfConfig":"23"},{"size":8804,"mtime":1678273548570,"results":"25","hashOfConfig":"23"},{"size":1070,"mtime":1678273639240,"results":"26","hashOfConfig":"23"},{"size":218,"mtime":1677256353585,"results":"27","hashOfConfig":"23"},{"size":945,"mtime":1677256894158,"results":"28","hashOfConfig":"23"},{"size":584,"mtime":1677256708612,"results":"29","hashOfConfig":"23"},{"size":1611,"mtime":1677256423958,"results":"30","hashOfConfig":"23"},{"size":1768,"mtime":1677256569952,"results":"31","hashOfConfig":"23"},{"size":351,"mtime":1677256147325,"results":"32","hashOfConfig":"23"},{"size":1544,"mtime":1677256047215,"results":"33","hashOfConfig":"23"},{"size":1306,"mtime":1678270579977,"results":"34","hashOfConfig":"23"},{"size":799,"mtime":1678269711884,"results":"35","hashOfConfig":"23"},{"size":362,"mtime":1678274134687,"results":"36","hashOfConfig":"23"},{"size":1398,"mtime":1678269192404,"results":"37","hashOfConfig":"23"},{"size":936,"mtime":1678268134420,"results":"38","hashOfConfig":"23"},{"size":2610,"mtime":1676921323410,"results":"39","hashOfConfig":"23"},{"size":82,"mtime":1678210553986,"results":"40","hashOfConfig":"23"},{"size":90,"mtime":1677256463902,"results":"41","hashOfConfig":"23"},{"size":722,"mtime":1677256744905,"results":"42","hashOfConfig":"23"},{"size":1463,"mtime":1677256097982,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l7n2ef",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/anteru/dev/react-mesto-auth/src/index.js",[],[],"/home/anteru/dev/react-mesto-auth/src/reportWebVitals.js",[],[],"/home/anteru/dev/react-mesto-auth/src/components/App.js",["108","109","110"],[],"import { useEffect, useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport { Route, Routes, useNavigate, useLocation } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport { AppContext } from '../contexts/AppContext';\nimport * as Auth from '../utils/Auth';\nimport InfoTooltip from './InfoTooltip';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({\n    userName: '',\n    userDescription: '',\n    userAvatar: '',\n    _id: ''\n  });\n  const [cards, setCards] = useState([]);\n  const [buttonText, setButtonText] = useState('Сохранить');\n  const [addPlacePopupButtonText, setAddPlacePopupButtonText] = useState('Создать');\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false);\n  const [isLoggedIn , setIsLogedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n \n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleImagePopup() {\n    setIsImagePopupOpen(true);\n  }\n\n  function handleDeleteButtonClick() {\n    setIsDeleteCardPopupOpen(true);\n  }\n\n  function handleLogin() {\n    setIsLogedIn(true);\n  }\n  \n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsDeleteCardPopupOpen(false);\n    setIsInfoTooltipOpen(false);\n  }\n\n  function handleInfoTooltip() {\n    setIsInfoTooltipOpen(true);\n  }\n\n  function handleSignUpStatus() {\n    setIsSignUp(true);\n  }\n\n  useEffect(() => {\n    Promise.all([\n      api.getUserInfo('https://nomoreparties.co/v1/cohort-57/users/me'),\n      api.getInitialCards()\n    ])\n    .then(([userData, cardsData])=>{\n      setCurrentUser({\n        userName: userData.name,\n        userDescription: userData.about,\n        userAvatar: userData.avatar,\n        _id: userData._id\n      });\n      setCards(cardsData);\n    })\n    .catch((error) => {\n      console.log(`Ошибка: ${error}`);\n    });\n\n  }, [])\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    api.changeLikeCardStatus(card._id, !isLiked)\n    .then((newCard) => {\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    })\n    .catch((error) => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n    .then((newCard) => {\n      setCards((state) => state.filter((c) => c._id !== card._id));\n      closeAllPopups();\n    })\n    .catch((error) => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }\n\n  function handleUpdateUser({name, about}) {\n    setButtonText('Сохранение...');\n    api.submitProfileData(name, about)\n    .then((data) => {\n      setCurrentUser({\n        userName: data.name,\n        userDescription: data.about,\n        userAvatar: data.avatar,\n        _id: data._id\n      })\n      closeAllPopups();\n    })\n    .catch((error) => {\n      console.log(`Ошибка: ${error}`);\n    })\n    .finally(() => {\n      setButtonText('Сохранить');\n    });\n  }\n\n  function handleUpdateAvatar({avatar}) {\n    setButtonText('Сохранение...');\n    api.updateAvatar(avatar)\n    .then((data) => {\n      setCurrentUser({\n        userName: data.name,\n        userDescription: data.about,\n        userAvatar: data.avatar,\n        _id: data._id\n      })\n      closeAllPopups();\n    })\n    .catch((error) => {\n      console.log(`Ошибка: ${error}`);\n    })\n    .finally(() => {\n      setButtonText('Сохранить');\n    });\n  }\n\n  function handleAddPlaceSubmit({name, link}) {\n    setAddPlacePopupButtonText('Сохранение...');\n    api.addNewCard(name, link)\n    .then((newCard) => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    })\n    .catch((error) => {\n      console.log(`Ошибка: ${error}`);\n    })\n    .finally(() => {\n      setAddPlacePopupButtonText('Создать');\n    });\n  }\n\n  const navigate = useNavigate();\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      Auth.getContent(jwt)\n      .then((res) => {\n        if (res) {\n          setEmail(res.data.email);\n          setIsLogedIn(true);\n          navigate(\"/\", {replace: true});\n        }\n      });\n    }\n  }\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!isLoggedIn && location.pathname !== '/sign-up') {\n      navigate('/sign-in', {replace: true});\n    }\n  }, [location.pathname])\n\n  useEffect(() => {\n    tokenCheck();\n  }, [isLoggedIn])\n  \n\n  function signOut() {\n    localStorage.removeItem('jwt');\n    navigate('/sign-in', {replace: true});\n    setIsLogedIn(false);\n  }\n\n  function handleRegister(password, email) {\n    Auth.register(password, email)\n    .then((res) => {\n      handleSignUpStatus();\n      handleInfoTooltip();\n      navigate('/sign-in', {replace: true})\n    })\n    .catch((error) => {\n      console.log(error);\n      handleInfoTooltip();\n      setIsSignUp(false);\n    })\n  }\n  \n  function handleSignIn(password, email) {\n    Auth.authorize(password, email)\n    .then((data) => {\n      if (data.token) {\n        handleLogin();\n        localStorage.setItem('jwt', data.token)\n        setEmail(data.email);\n        navigate('/', {replace: true});\n      }\n    })\n    .catch(err => console.log(err));\n  }\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <AppContext.Provider value={{state: isLoggedIn, handleLogin: handleLogin}}>\n        <div className=\"page\">\n          <div className=\"page-content\">\n            <Header\n              email={email}\n              onSignOut={signOut}\n            />\n            <Routes>\n              <Route path='/' element={\n                <ProtectedRoute\n                  exact\n                  element={Main}\n                  onEditAvatar={handleEditAvatarClick}\n                  onEditProfile={handleEditProfileClick}\n                  onAddPlace={handleAddPlaceClick}\n                  onCardClick={setSelectedCard}\n                  handleImagePopup={handleImagePopup}\n                  onCardLike={handleCardLike}\n                  cards={cards}\n                  onCardDelete={handleCardDelete}\n                />}\n              />\n              <Route path='/sign-up' element={<Register onSignUp={handleRegister}/>}/>\n              <Route path='/sign-in' element={<Login onSignIn={handleSignIn}/>} />\n            </Routes>\n            {isLoggedIn && <Footer />}\n            <EditProfilePopup\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n              buttonText={buttonText}\n            />\n            <AddPlacePopup\n              isOpen={isAddPlacePopupOpen}\n              onClose={closeAllPopups}\n              onAddPlace={handleAddPlaceSubmit}\n              buttonText={addPlacePopupButtonText}\n            />\n            <DeleteCardPopup\n              isOpen={isDeleteCardPopupOpen}\n              onClose={closeAllPopups}\n              onSubmit={handleCardDelete}\n            />\n            <EditAvatarPopup\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n              buttonText={buttonText}\n            />\n            <ImagePopup\n              card={selectedCard}\n              isOpen={isImagePopupOpen}\n              onClose={closeAllPopups}\n            />\n            <InfoTooltip\n              isOpen={isInfoTooltipOpen}\n              isSignUp={isSignUp}\n              onClose={closeAllPopups}\n            />\n          </div>\n        </div>\n      </AppContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","/home/anteru/dev/react-mesto-auth/src/components/Header.js",[],[],"/home/anteru/dev/react-mesto-auth/src/components/Footer.js",[],[],"/home/anteru/dev/react-mesto-auth/src/components/EditAvatarPopup.js",[],[],"/home/anteru/dev/react-mesto-auth/src/components/ImagePopup.js",[],[],"/home/anteru/dev/react-mesto-auth/src/components/Main.js",[],[],"/home/anteru/dev/react-mesto-auth/src/components/EditProfilePopup.js",[],[],"/home/anteru/dev/react-mesto-auth/src/components/DeleteCardPopup.js",[],[],"/home/anteru/dev/react-mesto-auth/src/components/AddPlacePopup.js",[],[],"/home/anteru/dev/react-mesto-auth/src/components/Login.js",[],[],"/home/anteru/dev/react-mesto-auth/src/components/InfoTooltip.js",[],[],"/home/anteru/dev/react-mesto-auth/src/components/ProtectedRoute.js",[],[],"/home/anteru/dev/react-mesto-auth/src/components/Register.js",[],[],"/home/anteru/dev/react-mesto-auth/src/utils/Auth.js",[],[],"/home/anteru/dev/react-mesto-auth/src/utils/Api.js",[],[],"/home/anteru/dev/react-mesto-auth/src/contexts/AppContext.js",[],[],"/home/anteru/dev/react-mesto-auth/src/contexts/CurrentUserContext.js",[],[],"/home/anteru/dev/react-mesto-auth/src/components/PopupWithForm.js",[],[],"/home/anteru/dev/react-mesto-auth/src/components/Card.js",[],[],{"ruleId":"111","severity":1,"message":"112","line":56,"column":12,"nodeType":"113","messageId":"114","endLine":56,"endColumn":35},{"ruleId":"115","severity":1,"message":"116","line":201,"column":6,"nodeType":"117","endLine":201,"endColumn":25,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"119","line":205,"column":6,"nodeType":"117","endLine":205,"endColumn":18,"suggestions":"120"},"no-unused-vars","'handleDeleteButtonClick' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isLoggedIn' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["121"],"React Hook useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.",["122"],{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [isLoggedIn, location.pathname, navigate]",{"range":"127","text":"128"},"Update the dependencies array to be: [isLoggedIn, tokenCheck]",{"range":"129","text":"130"},[5454,5473],"[isLoggedIn, location.pathname, navigate]",[5519,5531],"[isLoggedIn, tokenCheck]"]